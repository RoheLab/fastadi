
Title:
A faster version of Adaptive-Impute

Author: 
Karl Rohe and Juhee Cho

Description:
This is a faster version of Adaptive-Impute. This can be used when the bounds on the entries does not exist 
so that trunction on the entries are not necessary.

Usage:
fastAdi(M.p, r, tol=1e-07,itmax=200)

Arguments:
M.p		        input matrix where the unobserved matrix are marked as zeros. Can be  in
              sparse matrix format (inherit from class "sparseMatrix" as in package Matrix)

r        		  rank of the resulting matrix. If no value is given, it automatically chooses one 
              with the biggest eigengap based on a scree plot.

tol		        tolerance for convergence 

itmax		      maximum number of iterations


Values:
s             returns a list s with s$u, s$v, and s$d matching the structure of svds(M.p,r)


Examples:
n = 500
d = 100
r = 5

A = matrix(runif(n*r,-5,5),n,r)
B = matrix(runif(d*r,-5,5),d,r)
M0 = A %*% t(B)

err = matrix(rnorm(n*d),n,d)
Mf = M0+err

p = 0.1
y = matrix(rbinom(n*d,1,p),n,d)
dat = Mf*y

out = fastAdi(M.p=dat,r=r)
str(out)
