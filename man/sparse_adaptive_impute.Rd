% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adaptive-impute.R
\name{sparse_adaptive_impute}
\alias{sparse_adaptive_impute}
\title{AdaptiveImpute}
\usage{
sparse_adaptive_impute(X, rank, epsilon = 1e-07, max_iter = 200L)
}
\arguments{
\item{X}{A sparse matrix of \code{sparseMatrix} class.}

\item{rank}{Desired rank (integer) to use in the low rank approximation.}

\item{epsilon}{Convergence criteria, measured in terms of relative change
in Frobenius norm of the full imputed matrix. Defaults to \code{1e-7}.}

\item{max_iter}{Maximum number of iterations to perform (integer). Defaults
to \code{200L}. In practice 10 or so iterations will get you a decent
approximation to use in exploratory analysis, and and 50-100 will get
you most of the way to convergence.}
}
\value{
A \code{low_rank_matrix_factorization} object.
}
\description{
An implementation of the \code{AdaptiveImpute} algorithm for matrix completion
for sparse matrices.
}
\examples{

library(Matrix)

set.seed(27)

# create a random 8 x 12 sparse matrix with 30 nonzero entries
M <- rsparsematrix(8, 12, nnz = 30)

s <- sparse_adaptive_impute(M, 5)
s

# reconstruct a rank-5 approximation of M
s$u \%*\% diag(s$d) \%*\% t(s$v)

# build a rank-5 approximation to M only for
# observed elements of M
masked_approximation(s, M)

}
