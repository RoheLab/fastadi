% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adaptive-impute.R
\name{adaptImpute}
\alias{adaptImpute}
\title{Adaptive-Impute}
\usage{
adaptImpute(M.p, r = NULL, sparse = c(TRUE, FALSE),
  sign.choice = c("asympt", "lm", "greedy"), min.value = NULL,
  max.value = NULL, tol = 1e-07, itmax = 200)
}
\arguments{
\item{M.p}{input matrix where the unobserved matrix are marked as zeros.
Can be  in sparse matrix format (inherit from class "sparseMatrix"
as in package Matrix)}

\item{r}{rank of the resulting matrix. If no value is given, it
automatically chooses one with the biggest eigengap based on a scree plot}

\item{sparse}{\code{TRUE} if only a few entries are observed and \code{FALSE} otherwise}

\item{sign.choice}{we recommend to use “asympt”. It uses asymptotically
consistent signs when combining the estimates of singular values
and singular vectors to obtain the estimates of the low-rank matrix.
“lm” uses linear regression and “greedy” uses greedy search.}

\item{min.value}{a constant. lower bound for the entries}

\item{max.value}{a constant. upper bound for the entries}

\item{tol}{tolerance for convergence}

\item{itmax}{maximum number of iterations}
}
\value{
TODO
}
\description{
An iterative matrix completion algorithm based on the thresholded SVD.
It differentially and adaptively penalizes the singular valuesin each
iteration. Although Adaptive-Impute employs multiple thresholding
parameters updated every iteration, there is no tuning problem since it
automatically finds specific values of the thresholding parameters which
are theoretically-justified and data-dependent.
}
\details{
For more details, please see “Intelligent Initialization and Adaptive
Thresholding for Iterative Matrix Completion; Some Statistical and
Algorithmic Theory for Adaptive-Impute”.
}
\examples{

n <- 500
d <- 100
r <- 5

A <- matrix(runif(n * r, -5, 5), n, r)
B <- matrix(runif(d * r, -5, 5), d, r)
M0 <- A \%*\% t(B)

err <- matrix(rnorm(n * d), n, d)
Mf <- M0 + err

p <- 0.1
y <- matrix(rbinom(n * d, 1, p), n, d)
dat <- Mf * y

out <- adaptImpute(M.p = dat, r = r)
}
\author{
Juhee Cho, Donggyu Kim, Karl Rohe
}
